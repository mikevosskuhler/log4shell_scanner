Resources:
  MyVpcF9F0CA6F:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/Resource
  MyVpcPublicSubnet1SubnetF6608456:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/Subnet
  MyVpcPublicSubnet1RouteTableC46AB2F4:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/RouteTable
  MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/RouteTableAssociation
  MyVpcPublicSubnet1DefaultRoute95FDF9EB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/DefaultRoute
  MyVpcPublicSubnet1EIP096967CB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/EIP
  MyVpcPublicSubnet1NATGatewayAD3400C1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet1EIP096967CB
          - AllocationId
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet1/NATGateway
  MyVpcPublicSubnet2Subnet492B6BFB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.32.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/Subnet
  MyVpcPublicSubnet2RouteTable1DF17386:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/RouteTable
  MyVpcPublicSubnet2RouteTableAssociation227DE78D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/RouteTableAssociation
  MyVpcPublicSubnet2DefaultRoute052936F6:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet2RouteTable1DF17386
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/DefaultRoute
  MyVpcPublicSubnet2EIP8CCBA239:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/EIP
  MyVpcPublicSubnet2NATGateway91BFBEC9:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet2Subnet492B6BFB
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet2EIP8CCBA239
          - AllocationId
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet2/NATGateway
  MyVpcPublicSubnet3Subnet57EEE236:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/Subnet
  MyVpcPublicSubnet3RouteTable15028F08:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/RouteTable
  MyVpcPublicSubnet3RouteTableAssociation5C27DDA4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable15028F08
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet57EEE236
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/RouteTableAssociation
  MyVpcPublicSubnet3DefaultRoute3A83AB36:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet3RouteTable15028F08
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/DefaultRoute
  MyVpcPublicSubnet3EIPC5ACADAB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/EIP
  MyVpcPublicSubnet3NATGatewayD4B50EBE:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: MyVpcPublicSubnet3Subnet57EEE236
      AllocationId:
        Fn::GetAtt:
          - MyVpcPublicSubnet3EIPC5ACADAB
          - AllocationId
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PublicSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PublicSubnet3/NATGateway
  MyVpcPrivateSubnet1Subnet5057CF7E:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.96.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet1/Subnet
  MyVpcPrivateSubnet1RouteTable8819E6E2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet1/RouteTable
  MyVpcPrivateSubnet1RouteTableAssociation56D38C7E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet1/RouteTableAssociation
  MyVpcPrivateSubnet1DefaultRouteA8CDE2FA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet1NATGatewayAD3400C1
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet1/DefaultRoute
  MyVpcPrivateSubnet2Subnet0040C983:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet2/Subnet
  MyVpcPrivateSubnet2RouteTableCEDCEECE:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet2/RouteTable
  MyVpcPrivateSubnet2RouteTableAssociation86A610DA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
      SubnetId:
        Ref: MyVpcPrivateSubnet2Subnet0040C983
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet2/RouteTableAssociation
  MyVpcPrivateSubnet2DefaultRoute9CE96294:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet2RouteTableCEDCEECE
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet2NATGateway91BFBEC9
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet2/DefaultRoute
  MyVpcPrivateSubnet3Subnet772D6AD7:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.160.0/19
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: eu-central-1c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet3/Subnet
  MyVpcPrivateSubnet3RouteTableB790927C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc/PrivateSubnet3
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet3/RouteTable
  MyVpcPrivateSubnet3RouteTableAssociationD951741C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTableB790927C
      SubnetId:
        Ref: MyVpcPrivateSubnet3Subnet772D6AD7
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet3/RouteTableAssociation
  MyVpcPrivateSubnet3DefaultRouteEC11C0C5:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet3RouteTableB790927C
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet3NATGatewayD4B50EBE
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/PrivateSubnet3/DefaultRoute
  MyVpcIGW5C4A4F63:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Log4ShellStack/MyVpc
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/IGW
  MyVpcVPCGW488ACE0D:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      InternetGatewayId:
        Ref: MyVpcIGW5C4A4F63
    Metadata:
      aws:cdk:path: Log4ShellStack/MyVpc/VPCGW
  MyCluster4C1BA579:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: Log4ShellStack/MyCluster/Resource
  ScheduledFargateTaskScheduledEventRule2B79E34F:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - MyCluster4C1BA579
              - Arn
          EcsParameters:
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: DISABLED
                SecurityGroups:
                  - Fn::GetAtt:
                      - ScheduledFargateTaskScheduledTaskDefSecurityGroupE075BC19
                      - GroupId
                Subnets:
                  - Ref: MyVpcPrivateSubnet1Subnet5057CF7E
                  - Ref: MyVpcPrivateSubnet2Subnet0040C983
                  - Ref: MyVpcPrivateSubnet3Subnet772D6AD7
            PlatformVersion: LATEST
            TaskCount: 1
            TaskDefinitionArn:
              Ref: ScheduledFargateTaskScheduledTaskDef521FA675
          Id: Target0
          Input: "{}"
          RoleArn:
            Fn::GetAtt:
              - ScheduledFargateTaskScheduledTaskDefEventsRole6CE19522
              - Arn
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledEventRule/Resource
  ScheduledFargateTaskScheduledTaskDefTaskRoleD0FF16AD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/TaskRole/Resource
  ScheduledFargateTaskScheduledTaskDef521FA675:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: amazon/amazon-ecs-sample
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ScheduledFargateTaskScheduledTaskDefScheduledContainerLogGroup4134B16C
              awslogs-stream-prefix: ScheduledFargateTask
              awslogs-region: eu-central-1
          Name: ScheduledContainer
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - ScheduledFargateTaskScheduledTaskDefExecutionRoleD37356D5
          - Arn
      Family: Log4ShellStackScheduledFargateTaskScheduledTaskDef9CF9B51D
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - ScheduledFargateTaskScheduledTaskDefTaskRoleD0FF16AD
          - Arn
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/Resource
  ScheduledFargateTaskScheduledTaskDefScheduledContainerLogGroup4134B16C:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/ScheduledContainer/LogGroup/Resource
  ScheduledFargateTaskScheduledTaskDefExecutionRoleD37356D5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/ExecutionRole/Resource
  ScheduledFargateTaskScheduledTaskDefExecutionRoleDefaultPolicy3E3AEE49:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ScheduledFargateTaskScheduledTaskDefScheduledContainerLogGroup4134B16C
                - Arn
        Version: "2012-10-17"
      PolicyName: ScheduledFargateTaskScheduledTaskDefExecutionRoleDefaultPolicy3E3AEE49
      Roles:
        - Ref: ScheduledFargateTaskScheduledTaskDefExecutionRoleD37356D5
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/ExecutionRole/DefaultPolicy/Resource
  ScheduledFargateTaskScheduledTaskDefEventsRole6CE19522:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/EventsRole/Resource
  ScheduledFargateTaskScheduledTaskDefEventsRoleDefaultPolicy4903ED72:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ecs:RunTask
            Condition:
              ArnEquals:
                ecs:cluster:
                  Fn::GetAtt:
                    - MyCluster4C1BA579
                    - Arn
            Effect: Allow
            Resource:
              Ref: ScheduledFargateTaskScheduledTaskDef521FA675
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ScheduledFargateTaskScheduledTaskDefExecutionRoleD37356D5
                - Arn
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ScheduledFargateTaskScheduledTaskDefTaskRoleD0FF16AD
                - Arn
        Version: "2012-10-17"
      PolicyName: ScheduledFargateTaskScheduledTaskDefEventsRoleDefaultPolicy4903ED72
      Roles:
        - Ref: ScheduledFargateTaskScheduledTaskDefEventsRole6CE19522
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/EventsRole/DefaultPolicy/Resource
  ScheduledFargateTaskScheduledTaskDefSecurityGroupE075BC19:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      aws:cdk:path: Log4ShellStack/ScheduledFargateTask/ScheduledTaskDef/SecurityGroup/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/12QzW7CMBCEn4W749L00DNKW4RUVVFScUWOWZIFYyN7DUJR3r12fgjqacef1+PZTXnKlwtxc4ncnxKFFW9LEvLEAtq1IFPebi+SZQe9zTOW+0qhLH2lgSKbVWE8wa+oFMx8ZivnjERBaPSjOYrPTR7Lj6C1ILiJO8stXoOcjTeawAY9NQxJxtOKQtbmDJpYCdJbpPvaGn/pMzyDjoF0vM2Ud8EuXk/yS9haxJju9AEH1DiF/E+MJoEa7Mx6091FUEzoeCkb2HsF+ydLBtcQLvxc+GEzsXYMxTkgM6JYcxMW2083qI4pU4d336Z+TDTprmMFOOOtHN6PumP5nRqjX974O39dLo4OMbFeE56BF0P9A98Nsh3vAQAA
    Metadata:
      aws:cdk:path: Log4ShellStack/CDKMetadata/Default
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

